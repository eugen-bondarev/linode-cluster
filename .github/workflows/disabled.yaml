name: Deploy
on:
  push:
    branches:
      - "disabled"
jobs:
  checkout:
    name: Checkout
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unlock secrets
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: state-artifact
          path: |
            ./
            !.git
  terraform-login:
    name: Terraform Login
    needs: checkout
    runs-on: ubuntu-22.04
    env:
      TF_CLOUD_TOKEN: ${{ secrets.TF_CLOUD_TOKEN }}
    steps:
      - name: Create Terraform crdentials file
        run: 'mkdir ~/.terraform.d && echo "{ \"credentials\": { \"app.terraform.io\": { \"token\": \"${TF_CLOUD_TOKEN}\" } } }" > ~/.terraform.d/credentials.tfrc.json'
      - name: Upload Terraform credentials
        uses: actions/upload-artifact@v3
        with:
          name: terraform-credentials-artifact
          path: ~/.terraform.d
  terraform-cloud:
    name: Terraform Cloud
    needs: terraform-login
    runs-on: ubuntu-22.04
    container:
      image: hashicorp/terraform:1.5
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: state-artifact
          path: ./
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: terraform-credentials-artifact
          path: ~/.terraform.d
      - name: Init
        run: terraform -chdir="cloud" init
      - name: Plan
        env:
          TF_VAR_token: ${{ secrets.TF_VAR_token }}
        run: terraform -chdir="cloud" plan -var-file="terraform.tfvars"
      - name: Apply
        env:
          TF_VAR_token: ${{ secrets.TF_VAR_token }}
        run: terraform -chdir="cloud" apply -auto-approve
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: state-artifact
          path: ./
  terraform-cluster:
    name: Terraform Cluster
    needs: terraform-cloud
    runs-on: ubuntu-22.04
    container:
      image: hashicorp/terraform:1.5
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: state-artifact
          path: ./
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: terraform-credentials-artifact
          path: ~/.terraform.d
      - name: Init
        run: terraform -chdir="cluster" init
      - name: Download Kubeconfig
        run: terraform -chdir="cloud" output -raw kubeconfig | base64 -d > ./cluster/secrets/kubeconfig
      - name: Plan
        run: terraform -chdir="cluster" plan -var-file="variables.secret.tfvars"
      - name: Apply
        run: terraform -chdir="cluster" apply -var-file="variables.secret.tfvars" -auto-approve
  clean-up:
    if: always()
    needs: terraform-cluster
    name: Clean Up
    runs-on: ubuntu-22.04
    container:
      image: hashicorp/terraform:1.5
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: state-artifact
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: terraform-credentials-artifact
